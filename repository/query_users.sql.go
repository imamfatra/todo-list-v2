// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: query_users.sql

package repository

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO users (
    email,
    username,
    password
) VALUES (
    $1, $2, $3
) RETURNING userid, email, username, password
`

type CreateAccountParams struct {
	Email    string `json:"email"`
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createAccount, arg.Email, arg.Username, arg.Password)
	var i User
	err := row.Scan(
		&i.Userid,
		&i.Email,
		&i.Username,
		&i.Password,
	)
	return i, err
}

const getAccount = `-- name: GetAccount :one
SELECT userid, email, username, password
FROM users
WHERE username = $1 AND password = $2
`

type GetAccountParams struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

func (q *Queries) GetAccount(ctx context.Context, arg GetAccountParams) (User, error) {
	row := q.db.QueryRowContext(ctx, getAccount, arg.Username, arg.Password)
	var i User
	err := row.Scan(
		&i.Userid,
		&i.Email,
		&i.Username,
		&i.Password,
	)
	return i, err
}
